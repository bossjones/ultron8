#!/usr/bin/env bash

pushd "$(dirname "$0")/.."

_PATH_TO_PYENV_PYTHON=$(pipenv run which python)
_BASE_PATH_PYENV_FOLDER=$(dirname -- "$_PATH_TO_PYENV_PYTHON")
_PATH_TO_MYPY="${_BASE_PATH_PYENV_FOLDER}/mypy"
_PATH_TO_PYLINT="${_BASE_PATH_PYENV_FOLDER}/pylint"
_PATH_TO_FLAKE="${_BASE_PATH_PYENV_FOLDER}/flake8"
# _PATH_TO_MONKEYTYPE="${_BASE_PATH_PYENV_FOLDER}/monkeytype"
# _PATH_TO_RST="${_BASE_PATH_PYENV_FOLDER}/doc8"
_PATH_TO_SPHINX_BUILD="${_BASE_PATH_PYENV_FOLDER}/sphinx-build"
_PATH_TO_BLACK="${_BASE_PATH_PYENV_FOLDER}/black"
_PATH_TO_AUTOPEP="${_BASE_PATH_PYENV_FOLDER}/autopep8"
_PATH_TO_RESTRUCTUREDTEXT_LINT="${_BASE_PATH_PYENV_FOLDER}/restructuredtext-lint"

# "python.pythonPath": "/Users/malcolm/.virtualenvs/ultron8-cznMaMZB/bin/python",

_TEMPDIR=`mktemp -t -d ultron8-vscode.XXXXXXXXXX` || exit 1
_FILE="$_TEMPDIR/ultron8-vscode.txt"

cat <<EOF > ${_FILE}
{
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/*.pyc": true,
        "**/__pycache__": true,
        "__pycache__/": true,
        "*.py[cod]": true,
        "*\$py.class": true,
        "*.so": true,
        ".Python": true,
        "build/": true,
        "develop-eggs/": true,
        "dist/": true,
        "downloads/": true,
        "eggs/": true,
        ".eggs/": true,
        "lib/": true,
        "lib64/": true,
        "parts/": true,
        "sdist/": true,
        "var/": true,
        "wheels/": true,
        "*.egg-info/": true,
        ".installed.cfg": true,
        "*.egg": true,
        "MANIFEST": true,
        "*.manifest": true,
        "*.spec": true,
        "pip-log.txt": true,
        "pip-delete-this-directory.txt": true,
        "htmlcov/": true,
        ".tox/": true,
        ".coverage": true,
        ".coverage.*": true,
        ".cache": true,
        "nosetests.xml": true,
        "coverage.xml": true,
        "*.cover": true,
        ".hypothesis/": true,
        ".pytest_cache/": true,
        "*.mo": true,
        "*.pot": true,
        "*.log": true,
        "local_settings.py": true,
        "db.sqlite3": true,
        "instance/": true,
        ".webassets-cache": true,
        ".scrapy": true,
        "docs/_build/": true,
        "target/": true,
        ".ipynb_checkpoints": true,
        ".python-version": true,
        "celerybeat-schedule": true,
        "*.sage.py": true,
        ".env": true,
        ".venv": true,
        "env/": true,
        "venv/": true,
        "ENV/": true,
        "env.bak/": true,
        "venv.bak/": true,
        ".spyderproject": true,
        ".spyproject": true,
        ".ropeproject": true,
        "site": true,
        ".mypy_cache/": true,
        "ultron8_venv/": true,
        "ultron8.egg-info/": true,
        "ultron8-*/": true,
        ".idea/": true,
        "*,cover": true,
        ".DS_Store": true,
        ".AppleDouble": true,
        ".LSOverride": true,
        "._*": true,
        ".DocumentRevisions-V100": true,
        ".fseventsd": true,
        ".Spotlight-V100": true,
        ".TemporaryItems": true,
        ".Trashes": true,
        ".VolumeIcon.icns": true,
        ".AppleDB": true,
        ".AppleDesktop": true,
        "Network Trash Folder": true,
        "Temporary Items": true,
        ".apdisk": true,
        "Thumbs.db": true,
        "ehthumbs.db": true,
        "Desktop.ini": true,
        "$RECYCLE.BIN/": true,
        "*.cab": true,
        "*.msi": true,
        "*.msm": true,
        "*.msp": true,
        "*.lnk": true,
        ".vscode/settings.json": true,
        ".vscode/tags": true,
        ".vagrant": true,
        "**/.*.swp": true,
        "**/.ropeproject": true,
        "**/.cache": true,
        "*.pyc": true,
        "roles/angstwad.docker_ubuntu": true,
        "roles/atosatto.docker-swarm": true,
        "roles/bakhti.elk": true,
        "roles/bas-ansible-roles-collection.git": true,
        "roles/bas-ansible-roles-collection.system-core": true,
        "roles/bas-ansible-roles-collection.system-groups": true,
        "roles/bas-ansible-roles-collection.system-hostname": true,
        "roles/bas-ansible-roles-collection.system-security": true,
        "roles/bas-ansible-roles-collection.system-ssh": true,
        "roles/bas-ansible-roles-collection.system-users": true,
        "roles/bennojoy.ntp": true,
        "roles/carlba.bash_aliases": true,
        "roles/chrismeyersfsu.provision_docker": true,
        "roles/dev-sec.os-hardening": true,
        "roles/dev-sec.ssh-hardening": true,
        "roles/geerlingguy.clamav": true,
        "roles/geerlingguy.docker": true,
        "roles/geerlingguy.dotfiles": true,
        "roles/geerlingguy.gitlab": true,
        "roles/geerlingguy.nodejs": true,
        "roles/geerlingguy.security": true,
        "roles/jdauphant.ssl-certs": true,
        "roles/jorti.fail2ban": true,
        "roles/joshualund.golang": true,
        "roles/mjanser.powerline": true,
        "roles/mmannerm.bash_it": true,
        "roles/nickhammond.logrotate": true,
        "roles/pablocrivella.nvm": true,
        "roles/sadsfae.ansible-elk": true,
        "roles/singleplatform-eng.users": true,
        "roles/williamyeh.oracle-java": true,
        "roles/yaegashi.blockinfile": true,
        "roles/zzet.rbenv": true,
        "roles/ANXS.build-essential": true,
        "roles/ANXS.git": true,
        "*.retry": true,
        ".molecule": true,
        "__pycache__": true,
        ".cache/": true,
        ".molecule/": true,
        "tests/.cache/": true,
        "tests/__pycache__/": true,
        "playbook.retry": true,
        "kail_0.7.0_linux_amd64.tar.gz": true,
        "kube-prompt_v1.0.5_linux_amd64.zip": true,
        "kubespy-linux-amd64.tar.gz": true,
        "peco_linux_amd64.tar.gz": true,
        "peco_linux_amd64/": true,
        "cov.xml": true
    },

    "coc.preferences.extensionUpdateCheck": "daily",

    "python.autoComplete.addBrackets":true,
    "python.autoComplete.extraPaths": [],
    "python.autoComplete.showAdvancedMembers": true,
    "python.autoComplete.typeshedPaths":[],
    "python.autoUpdateLanguageServer":true,
    "python.disableInstallationCheck":false,
    "python.trace.server":"off",
    "python.formatting.autopep8Args":[],
    "python.formatting.autopep8Path":"${_PATH_TO_AUTOPEP}",
    "python.globalModuleInstallation":false,
    "python.jediEnabled":true,
    "python.analysis.openFilesOnly":true,
    "python.analysis.diagnosticPublishDelay": 10,
    "python.analysis.typeshedPaths":[],
    "python.analysis.errors":[],
    "python.analysis.warnings":[],
    "python.analysis.information":[],
    "python.analysis.disabled":[],
    "python.analysis.logLevel":"Error",
    "python.analysis.symbolsHierarchyDepthLimit":10,
    "python.linting.lintOnSave": true,
    "python.linting.maxNumberOfProblems":100,
    "python.linting.pylintCategorySeverity.convention":"Information",
    "python.linting.pylintCategorySeverity.error":"Error",
    "python.linting.pylintCategorySeverity.fatal":"Error",
    "python.linting.pylintCategorySeverity.refactor":"Hint",
    "python.linting.pylintCategorySeverity.warning":"Warning",
    "python.linting.pylintUseMinimalCheckers": false,
    "python.linting.pydocstyleEnabled":false,
    "python.terminal.activateEnvironment":true,
    "python.terminal.executeInFileDir":true,
    "python.terminal.launchArgs":[],
    "python.workspaceSymbols.ctagsPath":"/usr/local/bin/ctags",
    "python.workspaceSymbols.enabled":true,
    "python.workspaceSymbols.exclusionPatterns":["**/site-packages/**"],
    "python.workspaceSymbols.rebuildOnFileSave":true,
    "python.workspaceSymbols.rebuildOnStart":true,

    "python.pythonPath": "${_PATH_TO_PYENV_PYTHON}",
    "python.linting.flake8Path": "${_PATH_TO_FLAKE}",
    "python.linting.mypyPath": "${_PATH_TO_MYPY}",
    "python.linting.pylintPath": "${_PATH_TO_PYLINT}",
    "restructuredtext.confPath": "\${workspaceFolder}",
    "restructuredtext.sphinxBuildPath": "${_PATH_TO_SPHINX_BUILD}",
    "python.formatting.blackPath": "${_PATH_TO_BLACK}",
     "restructuredtext.linter.executablePath": "${_PATH_TO_RESTRUCTUREDTEXT_LINT}",
    "python.formatting.provider": "black",
    "python.linting.ignorePatterns": [
      ".vscode/*.py",
      "**/site-packages/**/*.py"
    ],
    "python.linting.enabled": true,
    "python.linting.pylintEnabled": true,
    "[python]": {
        "editor.formatOnPaste": false
    }
}
EOF

echo -e "\n Here is the newly rendered settings.json file for you\n\n"
\cat ${_FILE}

\cat ${_FILE} | pbcopy

echo -e "\n\n"

echo -e "\n [Diff] of the two files. diff ${_FILE} .vscode/settings.json \n\n"
diff ${_FILE} .vscode/settings.json
echo -e "\n\n"

echo "Would you like to continue copying over the old .vscode/settings.json file?"

echo -n "Enter your answer and press [ENTER]: (y/n)"
read answer
echo

if  [ "$answer" == "y" ]; then
  cp -avf ${_FILE} .vscode/settings.json
elif [ "$answer" == "n" ]; then
  echo "You chose not to overwrite .vscode/settings.json. Exiting gracefully ..."
else
  echo "Invalid choice, must pick between 'y' or 'n'"
fi

echo "rm ${_TEMPDIR}"
rm -rfv ${_TEMPDIR}

popd
