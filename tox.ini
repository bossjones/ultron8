# Tox is a generic virtualenv management and test command line tool you can use for:
# checking your package installs correctly with different Python versions and interpreters
# running your tests in each of the environments, configuring your test tool of choice
# acting as a frontend to Continuous Integration servers, greatly reducing boilerplate and merging CI and shell-based testing.
#
# content of: tox.ini , put in same dir as setup.py
# for more info: http://tox.readthedocs.io/en/latest/config.html
[tox]
# envlist = py36, py37
envlist = py36,lint,doclint,pylint,typing,cov
skip_missing_interpreters = True

[testenv]

# FIXME: Enable this, we took it from bemoonbeam_cli
# setenv =
#     PYTHONPATH = {toxinidir}:{toxinidir}/ultron8
#     TZ = UTC
#     COV_CORE_SOURCE={toxinidir}/ultron8
#     COV_CORE_CONFIG={toxinidir}/.coveragerc
# #    COV_CORE_DATAFILE={toxinidir}/.coverage
# # both temper-python and XBee modules have utf8 in their README files
# # which get read in from setup.py. If we don't force our locale to a
# # utf8 one, tox's env is reset. And the install of these 2 packages
# # fail.
# whitelist_externals = /usr/bin/env
# install_command = /usr/bin/env LANG=C.UTF-8 pip install {opts} {packages}

deps =
    --requirement={toxinidir}/requirements-test.txt
    --requirement={toxinidir}/requirements.txt

commands =
    pip install --editable .
    pytest tests --cov=ultron8

# SOURCE: https://github.com/Yelp/Tron/blob/master/tox.ini
[testenv:docs]
deps =
    --requirement={toxinidir}/requirements-doc.txt
whitelist_externals=
    mkdir
commands=
    mkdir -p docs
    sphinx-build -b html -d docs/_build docs docs/_build/html

# SOURCE: https://github.com/Yelp/Tron/blob/master/tox.ini
[testenv:example-cluster]
whitelist_externals=docker-compose
deps=
    docker-compose
commands=
    docker-compose -f example-cluster/docker-compose.yml build playground
    docker-compose -f example-cluster/docker-compose.yml run -p 8089:8089 playground
    docker-compose -f example-cluster/docker-compose.yml down


; [testenv:cluster_itests]
; changedir=cluster_itests/
; passenv = DOCKER_TLS_VERIFY DOCKER_HOST DOCKER_CERT_PATH
; whitelist_externals =
;     /bin/bash
; deps =
;     docker-compose
; commands =
;     docker-compose down
;     docker-compose build
;     docker-compose up -d mesosmaster mesosslave tronmaster
;     bash -c "docker-compose run --rm tronmaster tox -i {env:PIP_INDEX_URL:https://pypi.python.org/simple} -e tron_itests_inside_container -- --no-capture {posargs} || (docker-compose logs && exit 1)"
;     docker-compose stop
;     docker-compose rm --force
; [testenv:tron_itests_inside_container]
; basepython = python3.6
; changedir=cluster_itests/
; deps =
;     {[testenv]deps}
;     behave==1.2.5
; whitelist_externals =
;     /bin/mkdir
; commands =
;     # TODO: upgrade behave if they ever take this reasonable PR
;     pip install git+git://github.com/asottile/behave@issue_533
;     behave {posargs}

; [testenv:trond_inside_container]
; basepython = python3.6
; deps = {[testenv]deps}
; commands =
;     trond --debug -c /work/cluster_itests/config/ -l /work/example-cluster/logging.conf -H 0.0.0.0


[testenv:cov]
basepython = {env:PYTHON3_PATH:python3}
setenv =
    PYTHONPATH = {toxinidir}:{toxinidir}/ultron8
    TZ = UTC
    COV_CORE_SOURCE={toxinidir}/ultron8
    COV_CORE_CONFIG={toxinidir}/.coveragerc

# both temper-python and XBee modules have utf8 in their README files
# which get read in from setup.py. If we don't force our locale to a
# utf8 one, tox's env is reset. And the install of these 2 packages
# fail.
whitelist_externals = /usr/bin/env
install_command = /usr/bin/env LANG=C.UTF-8 pip install {opts} {packages}
commands =
     pytest --timeout=9 --duration=10 --cov --cov-report= {posargs}
     coverage report
     coverage html
deps =
     -r{toxinidir}/requirements.txt
     -r{toxinidir}/requirements-dev.txt
     -r{toxinidir}/requirements-test.txt

[testenv:pylint]
basepython = {env:PYTHON3_PATH:python3}
ignore_errors = True
deps =
     -r{toxinidir}/requirements.txt
     -r{toxinidir}/requirements-dev.txt
# NOTE: Orig command, switching to error only for now 10/1/2018
# commands =
#     pylint --rcfile ./pylint.cfg {posargs} ultron8
commands =
     pylint --errors-only {posargs} ultron8

[testenv:lint]
basepython = {env:PYTHON3_PATH:python3}
deps =
     -r{toxinidir}/requirements.txt
     -r{toxinidir}/requirements-dev.txt
commands =
         flake8 --count --select=E901,E999,F821,F822,F823 --max-line-length=200 --show-source --statistics {posargs}

[testenv:doclint]
basepython = {env:PYTHON3_PATH:python3}
deps =
     -r{toxinidir}/requirements.txt
     -r{toxinidir}/requirements-dev.txt
commands =
         pydocstyle {posargs:ultron8 tests}

[testenv:typing]
basepython = {env:PYTHON3_PATH:python3}
whitelist_externals =
    /bin/bash
    /bin/sh
deps =
     -r{toxinidir}/requirements.txt
     -r{toxinidir}/requirements-dev.txt
commands =
         /bin/bash -c 'mypy ultron8/*.py'
