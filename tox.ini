# Tox is a generic virtualenv management and test command line tool you can use for:
# checking your package installs correctly with different Python versions and interpreters
# running your tests in each of the environments, configuring your test tool of choice
# acting as a frontend to Continuous Integration servers, greatly reducing boilerplate and merging CI and shell-based testing.
#
# content of: tox.ini , put in same dir as setup.py
# for more info: http://tox.readthedocs.io/en/latest/config.html
[tox]
envlist = py36, py37

[testenv]
deps =
    --requirement={toxinidir}/requirements-test.txt
    --requirement={toxinidir}/requirements.txt
    --requirement={toxinidir}/requirements-dev.txt

commands =
    pip install --editable .
    pytest tests --cov=ultron8

# SOURCE: https://github.com/Yelp/Tron/blob/master/tox.ini
[testenv:docs]
deps =
    --requirement={toxinidir}/requirements-doc.txt
whitelist_externals=
    mkdir
commands=
    mkdir -p docs
    sphinx-build -b html -d docs/_build docs docs/_build/html

# SOURCE: https://github.com/Yelp/Tron/blob/master/tox.ini
[testenv:example-cluster]
whitelist_externals=docker-compose
deps=
    docker-compose
commands=
    docker-compose -f example-cluster/docker-compose.yml build playground
    docker-compose -f example-cluster/docker-compose.yml run -p 8089:8089 playground
    docker-compose -f example-cluster/docker-compose.yml down


; [testenv:cluster_itests]
; changedir=cluster_itests/
; passenv = DOCKER_TLS_VERIFY DOCKER_HOST DOCKER_CERT_PATH
; whitelist_externals =
;     /bin/bash
; deps =
;     docker-compose
; commands =
;     docker-compose down
;     docker-compose build
;     docker-compose up -d mesosmaster mesosslave tronmaster
;     bash -c "docker-compose run --rm tronmaster tox -i {env:PIP_INDEX_URL:https://pypi.python.org/simple} -e tron_itests_inside_container -- --no-capture {posargs} || (docker-compose logs && exit 1)"
;     docker-compose stop
;     docker-compose rm --force
; [testenv:tron_itests_inside_container]
; basepython = python3.6
; changedir=cluster_itests/
; deps =
;     {[testenv]deps}
;     behave==1.2.5
; whitelist_externals =
;     /bin/mkdir
; commands =
;     # TODO: upgrade behave if they ever take this reasonable PR
;     pip install git+git://github.com/asottile/behave@issue_533
;     behave {posargs}

; [testenv:trond_inside_container]
; basepython = python3.6
; deps = {[testenv]deps}
; commands =
;     trond --debug -c /work/cluster_itests/config/ -l /work/example-cluster/logging.conf -H 0.0.0.0
